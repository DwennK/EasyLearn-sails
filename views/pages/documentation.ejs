<div id="documentation" v-cloak>
    <div class="hero d-flex flex-column justify-content-center" full-page-hero>
      <div class="container text-center">
        <div class="hero-image">
          <img class="sky" alt="The sky above the ocean" src="/images/hero-sky.png"/>
          <img class="cloud cloud-1" alt="A grayish-blue cloud" src="/images/hero-cloud.png"/>
          <img class="cloud cloud-2" alt="Another grayish-blue cloud" src="/images/hero-cloud.png"/>
          <img class="ship" alt="A ship hovering a few feet over the surface of the water, bearing a flagpole with the Sails.js logo" src="/images/hero-ship.png"/>
          <img class="water" alt="The shadow of the floating ship on the water" src="/images/hero-water.png"/>
        </div>
        <h1 class="display-4">Consult Easylearn <strong>Doc</strong> to learn to use it.</h1>
      </div>
    </div>
    <div class="about-wrapper" role="scroll-destination">
      <div class="container">
        <div class="features text-center">
          <div class="row">
            <div class="feature col-sm">
              <div class="icon">
                <i class="fa fa-envelope"></i>
              </div>
              <h4>Emails</h4>
              <p class="text-muted">Built-in support for internal emails from the <a href="/contact">contact form</a>, as well as transactional emails for users.</p>
            </div>
            <div class="col-sm feature">
              <div class="icon">
                <i class="fa fa-lock"></i>
              </div>
              <h4>Authentication</h4>
              <p class="text-muted">Ready-to-go, customizable <a href="/signup">sign up</a>, <a href="/login">login</a>, and <a href="/password/forgot">password recovery</a> flows for your users.</p>
            </div>
            <div class="col-sm feature">
              <div class="icon">
                <i class="fa fa-credit-card"></i>
              </div>
              <h4>Billing</h4>
              <p class="text-muted">Hook up to your Stripe account for managing customers and payment sources.</p>
            </div>
          </div>
          <a class="btn btn-outline-info mt-5" href="/faq">Learn more</a>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="setup">
        <h3 class="text-center">How to get started:</h3>
		<div class="step">
				<div class="step-image">
				<img alt="computer with sails logo on screen" src="/images/setup-customize.png"/>
				</div>
        <div class="markdown-body">
                        <h2>
              <a id="user-content-postman" class="anchor" href="#postman" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Postman</h2>
              <p>You can use <a href="https://www.getpostman.com/" rel="nofollow">Postman</a> to easily make resquest to this API.</p>
              <p>You can also make requests directly from your web browser if you want, and you'll get the results as JSON.
              When <em>creating/updating/deleting</em> new datas, you'll receive the data <em>created/updated/deleted</em> as a response.</p>
              <h2>
              <a id="user-content-credentials" class="anchor" href="#credentials" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Credentials</h2>
              <p>Here is a test account that have ~25 cards in the category 2. (School)</p>
              <p><code>E-mail : Dwenn@live.fr</code></p>
              <p><code>Password : Dwenn</code></p>
              <h2>
              <a id="user-content-connect-to-the-api-and-get-a-token" class="anchor" href="#connect-to-the-api-and-get-a-token" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Connect to the API and get a token</h2>
              <p>To connect, you have to send a PUT resquest to the login API endpoint</p>
              <p><code>PUT /api/v1/entrance/login</code></p>
              <p>in header, you have to send these values:</p>
              <p><code>emailAddress : YOUREMAIL</code></p>
              <p><code>password : YOURPASSWORD</code></p>
              <p>You will receive the TOKEN, by the response header.</p>
              <p>Here is a picture to show you how : <img src="https://camo.githubusercontent.com/8f49ba7f3fa7dd7866d7047ec8dc2d64978d17c1/687474703a2f2f696d6167652e6e6f656c736861636b2e636f6d2f66696368696572732f323031382f34302f352f313533383733343839382d73637265656e73686f742d312e706e67" alt="Postman Connect" data-canonical-src="http://image.noelshack.com/fichiers/2018/40/5/1538734898-screenshot-1.png"></p>
              <h2>
              <a id="user-content-get-available-lessons-only-once-the-user-is-connected" class="anchor" href="#get-available-lessons-only-once-the-user-is-connected" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get available lessons (only once the user is connected)</h2>
              <p><code>GET /categories/find</code></p>
              <p>You will receive all the categories.</p>
              <h2>
              <a id="user-content-get-cards-from-a-lesson" class="anchor" href="#get-cards-from-a-lesson" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get cards from a lesson</h2>
              <p><code>GET /cartes/find?limit=XX?numCategories=YY</code></p>
              <p>Where <code>XX</code> is the number of cards you want to get, provided there is enough already created.
              If you do not specify the number of cards you want, the default number is 20.</p>
              <p>Where <code>YY</code> is the identifier of the category model's card you want to get.</p>
              <p>A user can only find his own cards.</p>
              <h2>
              <a id="user-content-get-all-the-words-of-the-current-user" class="anchor" href="#get-all-the-words-of-the-current-user" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get all the words of the current user.</h2>
              <p><code>GET /mots/find</code></p>
              <h2>
              <a id="user-content-modify-cards-compartiment-from-a-specific-lesson" class="anchor" href="#modify-cards-compartiment-from-a-specific-lesson" aria-hidden="true"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modify cards compartiment from a specific lesson</h2>
              <p><code>GET /cartes/update/1/?numMotsRecto=XX&amp;numMotsVerso=YY&amp;compartiment=ZZ</code></p>
              <p>Where <code>XX</code>  and <code>YY</code> is the ID of the word you want to modify.</p>
              <p><code>ZZ</code> Is the Compartiment you want to move the card to.</p>
              <p>A user can only update his own cards.</p>

        </div>
		</div>


        <div class="step">
          <div class="step-image">
          <img alt="computer with sails logo on screen" src="/images/setup-customize.png"/>
          </div>
          <h5>Customize</h5>
          <p>Once the initial configuration is done, you're ready to start building out the rest of your app.</p>
          <p>We worked hard to make this starter app's structure consistent and its files are as bare-bones as possible, so it's easy to add new pages and business logic following the conventions we set up. If you run into trouble, have a look at <a href="/faq">your new FAQ page</a>, which covers the tools we used and how to customize.  For a deeper dive, check out the Sails <a href="https://sailsjs.com/documentation">documentation</a> and <a href="https://sailsjs.com/support">support</a> pages.</p>
        </div>
      </div>
      <hr/>
      <div class="pep-talk text-center">
        <h3>Let's get to work.</h3>
        <p>We think this project is a pretty convenient starting point, but of course there's no one-size-fits-all solution. The good news is, this app is in your hands now, so you can jump into the files and adapt it to your needs. Change some code around. Break stuff.  Fix it. And above all: <strong>make something people want to use</strong>.</p>
        <p><span class="text-muted">&hearts;</span> <a href="https://sailsjs.com/about">The Sails Team</a></p>
      </div>
    </div>
  </div>
  <%- /* Expose locals as `window.SAILS_LOCALS` :: */ exposeLocalsToBrowser() %>
  